// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
require('dotenv').config();
const { Telegraf, Markup } = require('telegraf');
const NodeCache = require('node-cache');
const moment = require('moment');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new Telegraf(process.env.BOT_TOKEN);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—ç—à–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
const cache = new NodeCache({ stdTTL: 86400 }); // —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤
const REQUEST_STATUS = {
  NEW: 'new',
  ANSWERED: 'answered',
  WAITING: 'waiting',
  TIMEOUT: 'timeout'
};

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
const QUESTION_CATEGORIES = {
  HOMEWORK: 'homework',
  APP: 'app',
  TECHNICAL: 'technical',
  OTHER: 'other'
};

// Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
bot.use(async (ctx, next) => {
  const start = new Date();
  console.log(`–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${ctx.from ? ctx.from.id : '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
  await next();
  const ms = new Date() - start;
  console.log(`–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–Ω—è–ª–∞ ${ms}ms`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.start(async (ctx) => {
  try {
    console.log('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç:', ctx.from ? ctx.from.id : '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
    
    const welcomeMessage = '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ö—É—Ä—Å–ù–æ–≤–∞ –¥–ª—è —Å–≤—è–∑–∏ —Å –∫—É—Ä–∞—Ç–æ—Ä–æ–º. –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∑–∞–¥–∞—Ç—å –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ –¥–æ–º–∞—à–Ω–µ–π —Ä–∞–±–æ—Ç–µ, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É.';
    
    await ctx.reply(welcomeMessage, Markup.keyboard([
      ['‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å'],
      ['üìö –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã', 'üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –∫–æ–º–∞–Ω–¥–æ–π']
    ]).resize());
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.');
  }
});

// [–û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –±–æ—Ç–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –∏–∑ index.js]
// –ó–¥–µ—Å—å –∏–¥—É—Ç –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"
bot.hears('‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', async (ctx) => {
  try {
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –≤–æ–ø—Ä–æ—Å–∞:', Markup.inlineKeyboard([
      [Markup.button.callback('üìù –í–æ–ø—Ä–æ—Å –ø–æ –¥–æ–º–∞—à–Ω–µ–π —Ä–∞–±–æ—Ç–µ', 'question_homework')],
      [Markup.button.callback('üì± –í–æ–ø—Ä–æ—Å –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é', 'question_app')],
      [Markup.button.callback('üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å', 'question_technical')],
      [Markup.button.callback('ü§î –î—Ä—É–≥–æ–µ', 'question_other')]
    ]));
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–∫–∏ "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.');
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è API Webhook
module.exports = async (req, res) => {
  try {
    // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è GET-–∑–∞–ø—Ä–æ—Å–æ–≤ (–ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏)
    if (req.method === 'GET') {
      return res.status(200).send('Telegram Bot Webhook is active!');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
    if (!req.body) {
      console.log('–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
      return res.status(200).send('OK but no request body');
    }
    
    console.log('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å webhook');
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
    await bot.handleUpdate(req.body);
    
    // –û—Ç–≤–µ—á–∞–µ–º —Å —É—Å–ø–µ—à–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º
    console.log('–ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
    return res.status(200).send('OK');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ webhook:', error);
    return res.status(500).send('Internal Server Error: ' + error.message);
  }
};